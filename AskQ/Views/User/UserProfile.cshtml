@model UserProfileViewModel
@{
    ViewData["Title"] = Model.User.UserName;
}

@if (TempData["Message"] is string message)
{
    <div class="alert alert-success" role="alert">@message</div>
}

@{bool isOwnProfile = User.Identity.IsAuthenticated && User.Identity.Name == Model.User.UserName; }

@if (!isOwnProfile)
{
    <h1>Ask @Model.User.UserName</h1>

    <form asp-controller="Questions" asp-action="Post" class="mb-3">
        <div class="form-group">
            <label for="QuestionText">Question</label>
            <textarea class="form-control" id="QuestionText" name="QuestionText" for="QuestionText"></textarea>
        </div>
        <div class="text-right">
            <button type="submit" class="btn btn-primary">Send question</button>
        </div>
        <input type="hidden" name="receivingId" value="@Model.User.Id" />
    </form>
}

@if (Model.Questions is null || !Model.Questions.Any())
{
    @if (isOwnProfile)
    {
        <div class="alert alert-info" role="alert">You don't have any questions.</div>
    }
    else
    {
        <div class="alert alert-info" role="alert">No questions have been asked to this user. Be the first to ask him!</div>
    }
}
else
{
    foreach (Question question in Model.Questions)
    {

        <div class="card m-3">
            <div class="card-header">
                Asked by:
                @if (question.AskedFrom is null)
                {
                    <span>annonymous user</span>
                }
                else
                {
                    <a href="#">@question.AskedFrom.UserName</a>// TODO: Real href.
                }
                | at @question.DateTime
            </div>
            <div class="card-body">
                <blockquote class="blockquote mb-0">
                    <p>@question.QuestionText</p>
                    <footer class="blockquote-footer">@question.Replies.First().ReplyText</footer>
                </blockquote>
            </div>
        </div>
    }
}
